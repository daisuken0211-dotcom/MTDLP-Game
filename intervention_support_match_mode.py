
def start_intervention_support_match_mode():
    print("\n=== Phase 5: 支援者マッチングゲーム ===")
    print("以下の支援内容について、最も適切な支援者を選んでください。")

    questions = [
        ("スマホの使い方の復習に付き合ってほしい", "娘さん"),
        ("金銭管理の週1確認", "娘さん"),
        ("同じ食材を買ってきてしまうことを見守る", "娘さん"),
        ("症状の進行予測について説明", "医師"),
        ("診断内容を他職種と共有", "医師"),
        ("訪問リハの導入提案", "ケアマネ"),
        ("支援者間の担当者会議を調整", "ケアマネ"),
        ("障害福祉との連携（生活相談員紹介）", "ケアマネ"),
        ("勤務表を貼り出してもらう", "職場スタッフ"),
        ("職場でのミスのフォロー体制を整える", "職場スタッフ"),
        ("喫茶店での忘れ物を見つけたら娘に伝える", "喫茶店スタッフ"),
        ("来店時の変化に気づいたら声かけ", "喫茶店スタッフ"),
        ("毎朝の見守り", "バス運転手・喫茶店スタッフへ声かけ"),
        ("乗り過ごしを防ぐアラーム等の設定", "娘さん"),
        ("就労支援センターへの連絡", "生活相談員"),
        ("就労継続支援B型の情報提供", "生活相談員"),
        ("後見制度についての情報提供調整", "生活相談員")
    ]

    score = 0
    for i, (q, correct) in enumerate(questions, 1):
        print(f"\nQ{i}: {q}")
        print("A. 娘さん\nB. 医師\nC. ケアマネ\nD. 職場スタッフ\nE. 喫茶店スタッフ\nF. バス運転手\nG. 生活相談員")
        answer = input("選択（A〜G）：").strip().upper()

        mapping = {
            "A": "娘さん",
            "B": "医師",
            "C": "ケアマネ",
            "D": "職場スタッフ",
            "E": "喫茶店スタッフ",
            "F": "バス運転手",
            "G": "生活相談員"
        }

        if answer in mapping:
            chosen = mapping[answer]
            if chosen == correct:
                print("→ 正解！")
                score += 10
            else:
                print(f"→ 不正解。正解は「{correct}」です。")
        else:
            print("→ 無効な入力でした。0点。")

    print(f"\n=== 結果：{score}点 ===")
    if score >= 140:
        print("支援者理解が非常に深く、適切な連携ができる視点があります。")
    elif score >= 100:
        print("概ね良好ですが、一部再確認が必要です。")
    else:
        print("もう一度支援者の役割を振り返りましょう。")

    input("\nEnterキーで次へ進みます。")
