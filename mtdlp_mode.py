def start_mtdlp_mode():
    print("=== MTDLPモード：OTの質問力演習（仕事8問完全版） ===\n")

    print("山口美咲さん（52歳・女性）は、若年性認知症と診断されています。最近介護認定を取得、要介護1でした。")
    print("現在は、娘の洋子さんと一緒に暮らしています。美咲さんの夫現在54歳で、東京に単身赴任していて、後6年で定年を迎えます。")
    print("夫は、定年後も仕事を続けたいと考えていて、退職後は、名古屋市にある支社で勤務したいと会社に依頼中です。")
    print("洋子さんは今年結婚をする事になっていて、結婚式には美咲さんも出席して欲しいと考えています。結婚後は、別居にはなりますが、洋子さんの夫と共に近くに住む事になっています。")
    print("美咲さんは記憶力の低下に加え、近頃予定を忘れることが増えてきて、本人・家族の負担になっています。")
    print("支援を受けながら、現在の自宅で自立した生活を希望されています。")
    print("現在は瀬戸市内の自宅からバスで通勤しており、職場では簡単な事務作業を担当。")
    print("社長や同僚の理解もあり、働き続けることに前向きな姿勢です。")
    print("さて、山口さんをよりりかいするため、これから質問を深めます。\n")

    score = 0
    qa_pairs = []

    # --- 各領域の質問データ ---
    daily_qs = [
        ("朝の準備で困ることはありますか？", "今のところ自分でできます。前日にメモを書いて準備してます。", 6),
        ("料理は最近どうされていますか？", "夕食は娘と一緒に作ることが多いです。一人でも簡単なものなら作れますよ。", 5),
        ("買い物に行く頻度は？", "週に2回くらい、近くのスーパーに行ってます。リストを書いてから出かけています。", 4)
    ]
    family_qs = [
        ("娘さんとの関係はどうですか？", "娘はとても気にかけてくれていて、よく話もします。結婚しても近くに住むって言ってくれて…ありがたいですね。", 5),
        ("家族のサポート体制について教えてもらえますか？", "娘と娘の婚約者はとても協力的です。土日には一緒に買い物に行ったり、家事のことを手伝ってくれたりします。", 6),
        ("最近、家族でどんなことをしていますか？", "娘の結婚の準備で忙しいですけど、いろんな話をして笑ってます。結婚式にも出たいし、ちゃんと送り出したいなって。", 4)
    ]
    work_questions = [
        ("職場についての質問", [
            ("職場はどこにありますか？", "瀬戸市郊外の福祉施設です。送迎車が瀬戸駅から出ています。", 10),
            ("仕事は何年くらいされていますか？", "今の職場には1年ほど勤務しています。", 6),
            ("職場の人は優しいですか？", "皆さん親切で、間違いがあってもフォローしてくださいます。", 3)
        ]),
        ("職場までの道順について", [
            ("職場までの道順を教えてください。", "バスで瀬戸駅まで行って、送迎車で通勤しています。", 10),
            ("家からはどうやってかよってますか？", "はい、バスと送迎車を利用しています。", 6),
            ("駅までは歩きますか？", "自宅からバス停までは徒歩5分程度です。", 3)
        ]),
        ("バス停について", [
            ("バス停の名前を教えてください？", "八幡台西のバス停で家から100メートルぐらいです。", 10),
            ("バス停は遠いですか？", "いいえ、5分くらいで着きます。", 6),
            ("駅まで歩いて行きますか？", "いえ、基本的にはバスを利用しています。", 3)
        ]),
        ("バス停の時間について", [
            ("朝のバス停の時間を教えてもらってよいですか？", "はい、いつもと一緒だと7時頃です。なので6時50分頃に家を出ています", 10),
            ("（運行表を見せながら）何時に乗ってますか？", "えーと。7時頃だけど・・・。これかな？こっちかな？多分これだ・・・。", 6),
            ("バスの時間は固定ですか？", "毎日大体同じだと思うよ", 4)
        ]),
        ("瀬戸駅に着いてからの行動について", [
            ("送迎車が来るまでの時間はどう過ごされていますか？", "はい、喫茶店でモーニングを楽しんでいます。", 10),
            ("バスの時間と送迎車までに時間は結構ありますがどうしているんですか？", "うーんそんなにないよ。コーヒーを飲みながら、ゆっくりしていますよ。", 6),
            ("スマホを見ていますか？", "たまにニュースを見たりします。", 4)
        ]),
        ("職場について", [
            ("職場の開始時間を教えてください。？", "はい、8:30です。送迎車にのれば間に合います。", 10),
            ("職場につく時間は？", "8:25につきます。", 4),
            ("職場についたら何してますか？", "別に？すぐに仕事です。", 2)
        ]),
        ("特にやりたい習慣について", [
            ("通勤中に気をつける事は？", "送迎バスの時間に間に合うように行くことです。怒られちゃうので。", 10),
            ("何かそれ以外に大切にしている習慣は？", "通勤中に喫茶店でモーニングを食べています。辞めればいいんだけど、どうしても行きたくなっちゃうんだよね", 6),
            ("仕事以外にやりたい事は？", "娘に迷惑をかけたくないですね。", 3)
        ]),
        ("バスでの通勤について", [
            ("通勤はバスが良いですか？例えば、タクシーなんかはどうですか？", "そうですね、自分の力で行けるのが嬉しいです。タクシーは高すぎます。", 10),
            ("自宅までの送迎があればして欲しいですか？", "バスに乗れるうちは、自分で通いたいです。", 6),
            ("娘さんに送ってもらったらどうですか？", "なるべく迷惑はかけたくないので…", 4)
        ])
    ]

    # --- 各領域の実行関数 ---
    def run_daily():
        nonlocal score, qa_pairs
        print("\n[日常生活]")
        asked = set()
        for i in range(3):
            print(f"\n選択肢（{i+1}/3）:")
            for j, (q, _, _) in enumerate(daily_qs, 1):
                print(f"{j}: {q}")
            ans = input("番号を選んでください：")
            if ans in ["1", "2", "3"]:
                idx = int(ans) - 1
                if idx not in asked:
                    q, reply, pts = daily_qs[idx]
                    print(f"山口さん「{reply}」")
                    score += pts
                    qa_pairs.append((q, reply))
                    asked.add(idx)

    def run_family():
        nonlocal score, qa_pairs
        print("\n[家族]")
        asked = set()
        for i in range(3):
            print(f"\n選択肢（{i+1}/3）:")
            for j, (q, _, _) in enumerate(family_qs, 1):
                print(f"{j}: {q}")
            ans = input("番号を選んでください：")
            if ans in ["1", "2", "3"]:
                idx = int(ans) - 1
                if idx not in asked:
                    q, reply, pts = family_qs[idx]
                    print(f"山口さん「{reply}」")
                    score += pts
                    qa_pairs.append((q, reply))
                    asked.add(idx)

    def run_work():
        nonlocal score, qa_pairs
        print("\n[仕事]")
        for main_q, options in work_questions:
            print(f"\nQ: {main_q}")
            for i, (opt, reply, _) in enumerate(options, 1):
                print(f"{i}: {opt}")
            ans = input("番号を選んでください：")
            if ans in ["1", "2", "3"]:
                idx = int(ans) - 1
                q, reply, pts = options[idx]
                print(f"山口さん「{reply}」")
                score += pts
                qa_pairs.append((q, reply))

    # --- 3領域が済むまでメニューを回す ---
    done_daily = False
    done_family = False
    done_work = False

    while True:
        print("\nQ1：どの領域から話を聞きますか？（※3領域すべて終えたら評価に進みます）")
        print(f"1. 仕事について {'(済)' if done_work else ''}")
        print(f"2. 日常生活について {'(済)' if done_daily else ''}")
        print(f"3. 家族について {'(済)' if done_family else ''}")
        choice = input("番号を入力：")

        if choice == "1":
            if done_work:
                print("→ 仕事はすでに完了しています。")
            else:
                run_work()
                done_work = True
                print("→ 仕事の質問が終了しました。")
        elif choice == "2":
            if done_daily:
                print("→ 日常生活はすでに完了しています。")
            else:
                run_daily()
                done_daily = True
                print("→ 日常生活の質問が終了しました。")
        elif choice == "3":
            if done_family:
                print("→ 家族はすでに完了しています。")
            else:
                run_family()
                done_family = True
                print("→ 家族の質問が終了しました。")
        else:
            print("無効な選択です。")

        if done_work and done_daily and done_family:
            print("\n=== 3領域すべての質問が終了しました。評価に進みます。 ===")
            break

    # --- 評価出力 ---
    print("\n=== 評価結果 ===")
    print(f"合計得点：{score}点")
    print("\n=== 聞き出したやりとり一覧 ===")
    for q, a in qa_pairs:
        print(f"- Q:{q} A:{a}")

    if score >= 60:
        print("\n▶ 非常に優れた質問内容です。支援に必要な要素が整理されています。")
    elif score >= 40:
        print("\n▶ 概ね良好ですが、もう少し深堀りできる部分もあります。")
    else:
        print("\n▶ 質問の順序や深さに改善の余地があります。振り返って再挑戦してみましょう。")

    input("\nEnterキーで次へ移動します。")

    return "バスに乗って週5日職場に通勤する。通勤途中に喫茶店でモーニングを食べる。"